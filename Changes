#
#  Revision history for Digest::SipHash
#
#
$Revision: 0.11 $ $Date: 2013/02/18 23:17:48 $
! csiphash.c
  le64toh() is now more portable.
  Thank Thomas Eckardt for reporting 0.10 was incompatble w/ Windows
  because of that

0.10 2013/02/18 10:43:55
! lib/Digest/SipHash/PP.pm
  instead of $mbi->numify(), 0 + $mbi is used to retrive UV.
  The former does not work reliabily on older perl.
  Thank you, travis!

0.09 2013/02/18 10:20:52
+ lib/Digest/SipHash/PP.pm t/02-PP.t
  Pure-Perl Implementation!
! lib/Digest/SipHash.pm
  POD fixes.

0.08 2013/02/17 15:07:36
! lib/Digest/SipHash.pm t/01-SipHash.t
  + Added siphash32 to @EXPORT_OK
  + Added :all to @EXPORT_TAG

0.07 2013/02/17 14:48:20
! SipHash.xs lib/Digest/SipHash.pm
  + added siphash32(), just an alias of siphash().
  ! s/key/seed/g
    # so less confusing from perl's point of view

0.06 2013/02/17 14:03:18
! lib/Digest/SipHash.pm t/01-SipHash.t
  Fixed: siphash() in scalar context

0.05 2013/02/17 13:34:32
! lib/Digest/SipHash.pm
  POD fixes.  Functionally identical to the previous version

0.04 2013/02/17 13:23:00
! SipHash.xs lib/Digest/SipHash.pm t/01-SipHash.t
  ! siphash() now always returns lower 32-bit first so
  Hash::Util::hash_value($str)
    == Digest::SipHash::siphash($str, Hash::Util::hash_seed());
  always holds true.
  + siphash64() added for 64-bit platforms

0.03 2013/02/17 10:30:45
! SipHash.xs lib/Digest/SipHash.pm t/01-SipHash.t
  Supports 64-bit int if perl supports that.

0.02 2013/02/17 08:30:18
! t/01-SipHash.t
  Checks the bug below.
! lib/Digest/SipHash.pm
  # forgot the following. oops.
  use base 'Exporter'; 

0.01 2013/02/17 07:53:54
+ *
  First Release
